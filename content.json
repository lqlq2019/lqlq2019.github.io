{"meta":{"title":"LqBlog","subtitle":"LqBlog","description":"personal blog,personal notes","author":"LQ","url":"https://shuimianbuzu.github.io","root":"/"},"pages":[{"title":"所有分类","date":"2020-07-03T15:10:02.132Z","updated":"2020-07-03T15:10:02.132Z","comments":true,"path":"categories/index.html","permalink":"https://shuimianbuzu.github.io/categories/index.html","excerpt":"","text":""},{"title":"404 Not Found","date":"2020-07-03T15:20:24.014Z","updated":"2020-07-03T15:20:24.014Z","comments":true,"path":"404.html","permalink":"https://shuimianbuzu.github.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"Myfriends","date":"2020-07-03T17:06:28.621Z","updated":"2020-07-03T17:06:28.621Z","comments":true,"path":"friends/index.html","permalink":"https://shuimianbuzu.github.io/friends/index.html","excerpt":"","text":"暂无"},{"title":"","date":"2020-07-03T15:17:23.473Z","updated":"2020-07-03T15:17:23.473Z","comments":true,"path":"mylist/index.html","permalink":"https://shuimianbuzu.github.io/mylist/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-07-03T16:59:47.175Z","updated":"2020-07-03T16:59:47.175Z","comments":true,"path":"about/index.html","permalink":"https://shuimianbuzu.github.io/about/index.html","excerpt":"","text":"逆水行舟不进则退 避免睡眠不足"},{"title":"所有标签","date":"2020-07-03T15:16:53.075Z","updated":"2020-07-03T15:16:53.075Z","comments":true,"path":"tags/index.html","permalink":"https://shuimianbuzu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"【Redis】Redis知识总结","slug":"redis/redis-summary","date":"2020-07-06T03:48:35.000Z","updated":"2020-07-06T10:24:23.367Z","comments":true,"path":"2020/07/06/redis/redis-summary/","link":"","permalink":"https://shuimianbuzu.github.io/2020/07/06/redis/redis-summary/","excerpt":"Redis的概述Redis 是速度非常快的非关系型（NoSQL）内存key-value存储数据库。键的类型只能为字符串，值支持字符串、列表、集合、有序集合、散列表等多种数据类型。 Redis 支持数据磁盘持久化存储，支持主从，支持分片。 Redis为什么这么快（拥有10万+QPS） Redis由C语言编写，完全基于内存，请求基本都是纯粹的内存操作，执行效率高 数据结构和数据操作简单 采用单线程，单线程也能处理高并发请求 使用多路I/O复用模型，非阻塞IO","text":"Redis的概述Redis 是速度非常快的非关系型（NoSQL）内存key-value存储数据库。键的类型只能为字符串，值支持字符串、列表、集合、有序集合、散列表等多种数据类型。 Redis 支持数据磁盘持久化存储，支持主从，支持分片。 Redis为什么这么快（拥有10万+QPS） Redis由C语言编写，完全基于内存，请求基本都是纯粹的内存操作，执行效率高 数据结构和数据操作简单 采用单线程，单线程也能处理高并发请求 使用多路I/O复用模型，非阻塞IO Redis常用数据类型 String：值最大能存储512MB，二进制安全 Hash：String元素组成的字典，适合存储对象 List：字符串列表，按String元素插入顺序排序 Set：String元素组成的无序集合，不允许重复，通过哈希表实现 Zset：有序集合，通过分数(score)对集合成员从小到大排序 其它：用于计数的HyperLogLog，用于支持存储地理位置信息的Geo等 Redis底层数据类型：1.简单动态字符串 2.链表 3.字典 4.跳跃表 5.整数集合 6.压缩集合 7.对象 Redis命令 Redis命令参考 String 1set count 1;incr count;get count Hash 1hmset lisi name &quot;lisi&quot; age &quot;18&quot;;hget lisi age List 1lpush mylist &quot;abc&quot;;lrange mylist 0 10;rpop mylist Set 1sadd myset &quot;abc&quot;;smembers myset Zset 1zadd myzset 1 &quot;abc&quot;;zrangebyscore myzset 0 10 key的查找与匹配 KEYS pattern：查找所有符合pattern模式的key 该指令一次返回所有匹配的key，key数量过大会导致服务卡顿 keys * SCAN cursor [MATCH pattern] [COUNT count]：适用海量key的查询匹配 基于游标的迭代器，以0作为开始一次迭代，直到命令返回游标0完成一次遍历，返回的数量不可控，多次返回可能会返回重复的key scan 0 match li* count 10 Redis数据持久化的3种方式 RDB（快照）持久化：保存某个时间点的全量数据快照，存储于dump.rdb文件 1）save：阻塞Redis服务进程，直到rdb文件被创建完成 2）bgsave：Fork出一个子进程来创建rdb文件，不会阻塞服务器进程 手动RDB持久化：使用lastsave和bgsave指令 自动RDB持久化：修改redis.conf配置文件中save m n参数定时触发，使用的是BGSAVE 优点：全量数据快照，文件小，恢复快 缺点：数据量大会严重影响性能，无法保存最近一次快照之后的数据 AOF（Append-Only-File）持久化：保存写状态，存储于appendonly.aof日志文件 以append的形式追加保存到AOF文件中（增量），记录除了查询外的所有变更数据库状态的指令 修改redis.conf配置文件appendonly no为appendonly yes使AOF持久化方式生效 配置AOF文件写入方式 选项 同步方式 appendfsync always 每个写命令都及时同步 appendfsync everysec 默认方式，每秒同步一次 appendfsync no 交给操作系统决定 优点：可读性高，适合保存增量数据，数据不易丢失 缺点：文件体积大，恢复时间长 RDB-AOF混合持久化（Redis4.0之后推出） 使用BGSAVE做镜像全量持久化，AOF做增量持久化 Redis的使用场景 计数器、缓存、会话缓存、分布式锁、消息队列 Redis实现分布式锁 SET key value [EX seconds] [PX milliseconds] [NX|XX] EX seconds：设置键的过期时间为second秒；PX milliseconds：设置键的过期时间为milliseconds毫秒；NX：只要键不存在才对键进行设置操作；XX：只要键存在才对键进行设置操作；SET操作完成时，返回OK，否则返回nii set name &quot;lisi&quot; ex 60 nx说明：因为键存在，所以60秒之内不能修改value的值 SETNX key value：如果key不存在，则创建并赋值；若存在则设置失败 返回值：返回1设置成功，返回0设置失败，时间复杂度为O(1) Redis实现异步队列 使用List作为队列，rpush生产消息，lpop消费消息 缺点：没有等待队列里有值就直接消费 解决：通过应用层引入Sleep机制调用LPOP重试 BLPOP key [key …] timeout：阻塞直到队列有消息或者超时 blpop mylist 30 缺点：生产出的数据只能提供一个消费者消费 pub/sub：主题订阅者模式，实现一对多的消费队列 发送者(pub)发送消息，订阅者(sub)接收消息 Redis客户端（订阅者）可以订阅任意数量的频道 消息发布是无状态的，无法保证可达，可以使用kafka等消息队列解决 订阅消息subscribe myTopic，发布消息publish myTopic &quot;hello&quot; 当Redis大量的key同时过期，清除耗时导致卡顿，可以给key设置过期时间加上随机值解决 Pipeline Pipeline和 Linux管道类似 Redis是基于请求/响应模型，单个请求处理需要逐个应答，使用Pipeline可以批量执行指令，节省多次IO往返时间 对于有顺序依赖的指令建议分批发送 Redis的同步机制 全量同步过程 Slave发送sync命令到Master Master启动一个后台进程，将Redis中的数据快照保存在文件中 Master将保存数据快照期间接收的命令缓存起来 Master完成写文件操作后，将该文件发送给Slave Master使用新的AOF文件替换掉旧的AOF文件 Master将这期间收集的增量写命令发送到Slave端 增量同步过程 Master接收用户的操作指令，判断是否需要发送到Slave 将操作记录追加到AOF文件 将操作传播到其它Slave：1.对齐主从库；2.往响应缓存写入指令 将缓存中的数据发送给Slave Redis Sentinel（哨兵）：解决主从同步Master宕机后的主从切换问题 监控：检查主从服务器是否运行正常 提醒：通过API向管理员或其它应用程序发送故障通知 自动故障迁移：主从切换","categories":[{"name":"数据库","slug":"数据库","permalink":"https://shuimianbuzu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"Redis","slug":"Redis","permalink":"https://shuimianbuzu.github.io/tags/Redis/"},{"name":"缓存中间件","slug":"缓存中间件","permalink":"https://shuimianbuzu.github.io/tags/%E7%BC%93%E5%AD%98%E4%B8%AD%E9%97%B4%E4%BB%B6/"}]},{"title":"【通用】常用正则表达式","slug":"common/regex","date":"2020-07-03T08:31:31.000Z","updated":"2020-07-03T17:08:55.537Z","comments":true,"path":"2020/07/03/common/regex/","link":"","permalink":"https://shuimianbuzu.github.io/2020/07/03/common/regex/","excerpt":"常用正则匹配手机号1&#x2F;^1[3|4|5|6|7|8|9]\\d&#123;9&#125;$&#x2F; 邮箱1&#x2F;^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$&#x2F; QQ号1&#x2F;^[1-9][0-9]&#123;4,10&#125;$&#x2F; 身份证号，1代15位，2代18位1&#x2F;(^\\d&#123;8&#125;(0\\d|10|11|12)([0-2]\\d|30|31)\\d&#123;3&#125;$)|(^\\d&#123;6&#125;(18|19|20)\\d&#123;2&#125;(0\\d|10|11|12)([0-2]\\d|30|31)\\d&#123;3&#125;(\\d|X|x)$)&#x2F;","text":"常用正则匹配手机号1&#x2F;^1[3|4|5|6|7|8|9]\\d&#123;9&#125;$&#x2F; 邮箱1&#x2F;^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$&#x2F; QQ号1&#x2F;^[1-9][0-9]&#123;4,10&#125;$&#x2F; 身份证号，1代15位，2代18位1&#x2F;(^\\d&#123;8&#125;(0\\d|10|11|12)([0-2]\\d|30|31)\\d&#123;3&#125;$)|(^\\d&#123;6&#125;(18|19|20)\\d&#123;2&#125;(0\\d|10|11|12)([0-2]\\d|30|31)\\d&#123;3&#125;(\\d|X|x)$)&#x2F; 二代身份证号(18位数字),最后一位是校验位,可能为数字或字符X1&#x2F;^\\d&#123;6&#125;(18|19|20)\\d&#123;2&#125;(0\\d|10|11|12)([0-2]\\d|30|31)\\d&#123;3&#125;(\\d|X|x)$&#x2F; 中国邮政编码1&#x2F;^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d&#123;4&#125;$&#x2F; 16进制颜色(#FFFFFF)1&#x2F;^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$&#x2F; IPv4(127.0.0.1)1&#x2F;^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$&#x2F; 子网掩码1&#x2F;^(?:\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5])(?:\\.(?:\\d&#123;1,2&#125;|1\\d\\d|2[0-4]\\d|25[0-5]))&#123;3&#125;$&#x2F; 国内座机号1&#x2F;\\d&#123;3&#125;-\\d&#123;8&#125;|\\d&#123;4&#125;-\\d&#123;7&#125;&#x2F; 日期(1970-01-01,1970-1-1)1&#x2F;^\\d&#123;4&#125;(-)(1[0-2]|0?\\d)\\1([0-2]\\d|\\d|30|31)$&#x2F; 24小时制时间（HH:mm:ss）1&#x2F;^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$&#x2F; 12小时制时间（hh:mm:ss）1&#x2F;^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$&#x2F; 视频链接地址1&#x2F;^https?:\\&#x2F;\\&#x2F;.*?(?:swf|avi|flv|mpg|rm|mov|wav|asf|3gp|mkv|rmvb|mp4)$&#x2F;i 图片链接地址1&#x2F;^https?:\\&#x2F;\\&#x2F;.*?(?:gif|png|jpg|jpeg|webp|svg|psd|bmp|tif)$&#x2F;i 统一社会信用代码1&#x2F;^[0-9A-HJ-NPQRTUWXY]&#123;2&#125;\\d&#123;6&#125;[0-9A-HJ-NPQRTUWXY]&#123;10&#125;$&#x2F; 迅雷链接1&#x2F;^thunderx?:\\&#x2F;\\&#x2F;[a-zA-Z\\d]+&#x3D;$&#x2F; ed2k链接1&#x2F;^ed2k:\\&#x2F;\\&#x2F;\\|file\\|.+\\|\\&#x2F;$&#x2F; 磁力链接1&#x2F;^magnet:\\?xt&#x3D;urn:btih:[0-9a-fA-F]&#123;40,&#125;.*$&#x2F; 带端口号的网址(或ip)1&#x2F;^(((ht|f)tps?):\\&#x2F;\\&#x2F;)?[\\w\\-]+(\\.[\\w\\-]+)+:\\d&#123;0,5&#125;\\&#x2F;?&#x2F;","categories":[{"name":"通用","slug":"通用","permalink":"https://shuimianbuzu.github.io/categories/%E9%80%9A%E7%94%A8/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://shuimianbuzu.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}]},{"title":"【Linux】花里胡哨的Linux命令","slug":"linux/garish","date":"2020-07-03T08:28:33.000Z","updated":"2020-07-03T17:07:36.037Z","comments":true,"path":"2020/07/03/linux/garish/","link":"","permalink":"https://shuimianbuzu.github.io/2020/07/03/linux/garish/","excerpt":"sl (跑火车) 环境参数：CentOS 下载 Epel-Release 1wget http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpm 安装 epel-release-6-8.noarch.rpm 1yum install -y epel-release-6-8.noarch.rpm 安装安装sl命令 1yum install -y sl 运行命令 1sl","text":"sl (跑火车) 环境参数：CentOS 下载 Epel-Release 1wget http:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;6&#x2F;x86_64&#x2F;epel-release-6-8.noarch.rpm 安装 epel-release-6-8.noarch.rpm 1yum install -y epel-release-6-8.noarch.rpm 安装安装sl命令 1yum install -y sl 运行命令 1sl 环境参数：MacOS 安装sl1brew install sl cowsay 样式 环境参数：CentOS 安装cowsay 1yum install cowsay -y 查看所有样式 1cowsay -l 使用示例 12cowsay -f default &quot;test&quot;cowsay -f tux &quot;hello&quot; &#96;whoami&#96; 环境参数：MacOS 安装cowsay1brew install cowsay","categories":[{"name":"运维","slug":"运维","permalink":"https://shuimianbuzu.github.io/categories/%E8%BF%90%E7%BB%B4/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://shuimianbuzu.github.io/tags/Linux/"}]}],"categories":[{"name":"数据库","slug":"数据库","permalink":"https://shuimianbuzu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"通用","slug":"通用","permalink":"https://shuimianbuzu.github.io/categories/%E9%80%9A%E7%94%A8/"},{"name":"运维","slug":"运维","permalink":"https://shuimianbuzu.github.io/categories/%E8%BF%90%E7%BB%B4/"}],"tags":[{"name":"Redis","slug":"Redis","permalink":"https://shuimianbuzu.github.io/tags/Redis/"},{"name":"缓存中间件","slug":"缓存中间件","permalink":"https://shuimianbuzu.github.io/tags/%E7%BC%93%E5%AD%98%E4%B8%AD%E9%97%B4%E4%BB%B6/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://shuimianbuzu.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"Linux","slug":"Linux","permalink":"https://shuimianbuzu.github.io/tags/Linux/"}]}